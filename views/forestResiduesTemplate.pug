extends layout

block content
  h1= title

  style.
    .imagemap {
      position: relative; 
      display: inline-block; 
      width: 100%; 
      height: auto;
    }
    .imagemap img {
      display: block; 
      width: 50%; 
      height: auto;
    }
    .svg-overlay {
      position: absolute; 
      top: 0; 
      left: 0; 
      width: 110%; 
      height: 107%; 
      pointer-events: none;
    }
    .area {
      stroke-width: 1; 
      pointer-events: all; 
      transition: fill 0.15s ease-in-out, stroke 0.15s ease-in-out;
    }
    .hide{
      display: none;
    }

  //Fill in the src for the state svg
  img(src="" alt="Map" usemap="#image-map" width="400" height="300")

  //Replace id with state map id and fill in the areas as children of the map
  div(class ="imagemap")
    map(name="image-map" id="")
      
    div(class="hide" id="display")

  table(class="table table-bordered")
    thead
      tr
        th(scope="col") Key
        th(scope="col") > 30
        th(scope="col") 30 - 20
        th(scope="col") 20 - 10
        th(scope="col") 10 - 5
        th(scope="col") 5 - 2.5
        th(scope="col") 2.5 - 1
        th(scope="col") Less than 1
        th(scope="col") 0
    tbody
      tr
        th(scope="row") Color
        td
          img(src="/images/darkgreen.png", alt="Green Square", height="25", width="25")
        td
          img(src="/images/lightGreen.png", alt="", height="25", width="25")
        td
          img(src="/images/yellow.png", alt="", height="25", width="25")
        td
          img(src="/images/lightYellow.png", alt="", height="25", width="25")
        td
          img(src="/images/darkOrange.png", alt="", height="25", width="25")
        td
          img(src="/images/lightOrangepng.png", alt="", height="25", width="25")
        td
          img(src="/images/red.png", alt="", height="25", width="25")
        td
          img(src="/images/darkRed.png", alt="", height="25", width="25")

  div
    -
      let moForestRes = `dispatch(\"missouriForestResidues\")`
      let iaForestRes = `dispatch(\"iowaForestResidues\")`
      let ksForestRes = `dispatch(\"kansasForestResidues\")`
      let arForestRes = `dispatch(\"arkansasForestResidues\")`
      let ndForestRes = `dispatch(\"northDakotaForestResidues\")`
      let okForestRes = `dispatch(\"oklahomaForestResidues\")`
      let neForestRes = `dispatch(\"nebraskaForestResidues\")`
      let ilForestRes = `dispatch(\"illinoisForestResidues\")`
      let kyForestRes = `dispatch(\"kentuckyForestResidues\")`
      let tnForestRes = `dispatch(\"tennesseeForestResidues\")`
      let msForestRes = `dispatch(\"mississippiForestResidues\")`
      let meForestRes = `dispatch(\"maineForestResidues\")`
      let nhForestRes = `dispatch(\"newHampshireForestResidues\")`
      let vtForestRes = `dispatch(\"vermontForestResidues\")`
      let maForestRes = `dispatch(\"massachusettsForestResidues\")`
      let nyForestRes = `dispatch(\"newYorkForestResidues\")`
      let riForestRes = `dispatch(\"rhodeIslandForestResidues\")`
      let ctForestRes = `dispatch(\"connecticutForestResidues\")`
      let njForestRes = `dispatch(\"newJerseyForestResidues\")`
      let paForestRes = `dispatch(\"pennsylvaniaForestResidues\")`
      let deForestRes = `dispatch(\"delawareForestResidues\")`
      let mdForestRes = `dispatch(\"marylandForestResidues\")`
      let vaForestRes = `dispatch(\"virginiaForestResidues\")`
      let ncForestRes = `dispatch(\"northCarolinaForestResidues\")`
      let scForestRes = `dispatch(\"southCarolinaForestResidues\")`
      let gaForestRes = `dispatch(\"georgiaForestResidues\")`
      let alForestRes = `dispatch(\"alabamaForestResidues\")`
      let wvForestRes = `dispatch(\"westVirginiaForestResidues\")`
      let ohForestRes = `dispatch(\"ohioForestResidues\")`
      let miForestRes = `dispatch(\"michiganForestResidues\")`
      let inForestRes = `dispatch(\"indianaForestResidues\")`
      let flForestRes = `dispatch(\"floridaForestResidues\")`
      let wiForestRes = `dispatch(\"wisconsinForestResidues\")`
      let mnForestRes = `dispatch(\"minnesotaForestResidues\")`
      let sdForestRes = `dispatch(\"southDakotaForestResidues\")`
      let mtForestRes = `dispatch(\"montanaForestResidues\")`
      let wyForestRes = `dispatch(\"wyomingForestResidues\")`
      let coForestRes = `dispatch(\"coloradoForestResidues\")`
      let nwForestRes = `dispatch(\"newMexicoForestResidues\")`
      let txForestRes = `dispatch(\"texasForestResidues\")`
      let azForestRes = `dispatch(\"arizonaForestResidues\")`
      let utForestRes = `dispatch(\"utahForestResidues\")`
      let idForestRes = `dispatch(\"idahoForestResidues\")`
      let waForestRes = `dispatch(\"washingtonForestResidues\")`
      let orForestRes = `dispatch(\"oregonForestResidues\")`
      let nvForestRes = `dispatch(\"nevadaForestResidues\")`
      let caForestRes = `dispatch(\"californiaForestResidues\")`
      let laForestRes = `dispatch(\"louisianaForestResidues\")`
      let akForestRes = `dispatch(\"alaskaForestResidues\")`
      let hiForestRes = `dispatch(\"hawaiiForestResidues\")`
    div
      button(type="button" class="btn btn-primary" onClick=alForestRes) Go to Alabama Forest Residue
      button(type="button" class="btn btn-primary" onClick=akForestRes) Go to Alaska Forest Residues 
      button(type="button" class="btn btn-primary" onClick=azForestRes) Go to Arizona Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=arForestRes) Go to Arkansas Forest Residues
      button(type="button" class="btn btn-primary" onClick=caForestRes) Go to California Forest Residues
      button(type="button" class="btn btn-primary" onClick=coForestRes) Go to Colorado Forest Residue
      br
      button(type="button" class="btn btn-primary" onClick=ctForestRes) Go to Connecticut Forest Residues 
      button(type="button" class="btn btn-primary" onClick=deForestRes) Go to Delaware Forest Residues 
      button(type="button" class="btn btn-primary" onClick=flForestRes) Go to Florida Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=gaForestRes) Go to Georgia Forest Residues
      button(type="button" class="btn btn-primary" onClick=hiForestRes) Go to Hawaii Forest Residue
      button(type="button" class="btn btn-primary" onClick=idForestRes) Go to Idaho Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=ilForestRes) Go to Illinois Forest Residues 
      button(type="button" class="btn btn-primary" onClick=inForestRes) Go to Indiana Forest Residues
      button(type="button" class="btn btn-primary" onClick=iaForestRes) Go to Iowa Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=ksForestRes) Go to Kansas Forest Residue
      button(type="button" class="btn btn-primary" onClick=kyForestRes) Go to Kentucky Forest Residues 
      button(type="button" class="btn btn-primary" onClick=laForestRes) Go to Louisiana Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=meForestRes) Go to Maine Forest Residues
      button(type="button" class="btn btn-primary" onClick=mdForestRes) Go to Maryland Forest Residues
      button(type="button" class="btn btn-primary" onClick=maForestRes) Go to Massachusettes Forest Residue
      br
      button(type="button" class="btn btn-primary" onClick=miForestRes) Go to Michigan Forest Residues 
      button(type="button" class="btn btn-primary" onClick=mnForestRes) Go to Minnesota Forest Residues 
      button(type="button" class="btn btn-primary" onClick=msForestRes) Go to Mississippi Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=moForestRes) Go to Missouri Forest Residues
      button(type="button" class="btn btn-primary" onClick=mtForestRes) Go to Montana Forest Residue
      button(type="button" class="btn btn-primary" onClick=neForestRes) Go to Nebraska Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=nvForestRes) Go to Nevada Forest Residues 
      button(type="button" class="btn btn-primary" onClick=nhForestRes) Go to New Hampshire Forest Residues
      button(type="button" class="btn btn-primary" onClick=njForestRes) Go to New Jersey Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=nmForestRes) Go to New Mexico Forest Residue
      button(type="button" class="btn btn-primary" onClick=nyForestRes) Go to New York Forest Residues 
      button(type="button" class="btn btn-primary" onClick=ncForestRes) Go to North Carolina Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=ndForestRes) Go to North Dakota Forest Residues
      button(type="button" class="btn btn-primary" onClick=ohForestRes) Go to Ohio Forest Residues
      button(type="button" class="btn btn-primary" onClick=okForestRes) Go to Oklahoma Forest Residue
      br
      button(type="button" class="btn btn-primary" onClick=orForestRes) Go to Orgeon Forest Residues 
      button(type="button" class="btn btn-primary" onClick=paForestRes) Go to Pennsylvania Forest Residues 
      button(type="button" class="btn btn-primary" onClick=riForestRes) Go to Rhode Island Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=scForestRes) Go to South Carolina Forest Residues
      button(type="button" class="btn btn-primary" onClick=sdForestRes) Go to South Dakota Forest Residue
      button(type="button" class="btn btn-primary" onClick=tnForestRes) Go to Tennessee Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=txForestRes) Go to Texas Forest Residues 
      button(type="button" class="btn btn-primary" onClick=utForestRes) Go to Utah Forest Residues
      button(type="button" class="btn btn-primary" onClick=vtForestRes) Go to Vermont Forest Residues
      br
      button(type="button" class="btn btn-primary" onClick=vaForestRes) Go to Virginia Forest Residue
      button(type="button" class="btn btn-primary" onClick=waForestRes) Go to Washington Forest Residues 
      button(type="button" class="btn btn-primary" onClick=wvForestRes) Go to West Virginia Forest Residues 
      br
      button(type="button" class="btn btn-primary" onClick=wiForestRes) Go to Wisconsin Forest Residues
      button(type="button" class="btn btn-primary" onClick=wyForestRes) Go to Wyoming Forest Residues

    script.
      function dispatch(path){
        window.location.href=path
      }  

  script.
    function toDict(keys, values){
      var returnDict = []
      for (let i = 0; i < keys.length; i++){
        returnDict.push({key: keys[i], value: values[i]});
      }
      return returnDict;
    }
    
    // Creating arrays for each attribute from the CSV
    var countyText = "#{Counties}";
    var countyArray = countyText.split(",");

    var stateText = "#{States}";
    var stateArray = stateText.split(",");

    var tdtText = "#{TDT}";
    var tdtArray = tdtText.split(",");

    // Arrays to hold County data
    var testCounties = []
    var testCountiesTDT = []

    // Populating the arrays
    for (let s = 0; s < stateArray.length; s++){
      // Replace with state name
      if (stateArray[s] == ""){
        testCounties.push(countyArray[s])
        testCountiesTDT.push(tdtArray[s])
      }
    }

    // Creating the dictonary
    var finalDict = toDict(testCounties, testCountiesTDT)

    // Event Listener for hover of each area
    document.addEventListener('DOMContentLoaded', function() {
      var images = document.querySelectorAll('img[usemap]');
      images.forEach(function(image) {
        var mapid = image.getAttribute('usemap').substr(1);
        var imagewidth = image.naturalWidth;
        var imageheight = image.naturalHeight;
        var imagemap = document.querySelector('map[name="'+mapid+'"]');
        var areas = imagemap.querySelectorAll('area');
        image.removeAttribute('usemap');
        imagemap.remove();
        
        // create wrapper container
        var wrapper = document.createElement('div');
        wrapper.classList.add('imagemap');
        image.parentNode.insertBefore(wrapper, image);
        wrapper.appendChild(image);
        
        // create SVG overlay
        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
        svg.setAttribute('viewBox', `0 0 ${imagewidth} ${imageheight}`);
        svg.setAttribute('class', 'svg-overlay');
        wrapper.appendChild(svg);
        
        areas.forEach(function(area) {
          var coords = area.getAttribute('coords').split(',').map(Number);
          if (area.getAttribute('shape') === 'poly') {
            var pointsAttr = '';
            for (var i = 0; i < coords.length; i += 2) {
              var x = coords[i] - 558;
              var y = coords[i + 1] - 1;
              pointsAttr += `${x},${y} `;
            }
            var polygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');
            polygon.setAttribute('points', pointsAttr.trim());
            polygon.setAttribute('class', 'area');
            polygon.setAttribute('data-href', area.getAttribute('href'));
            polygon.setAttribute('title', area.getAttribute('title'));

            for (let i = 0; i < finalDict.length; i++){
              if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 30){
                polygon.setAttribute('fill', 'rgba(38, 106, 46, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 20){
                polygon.setAttribute('fill', 'rgba(153, 204, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 10){
                polygon.setAttribute('fill', 'rgba(255, 204, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 5){
                polygon.setAttribute('fill', 'rgba(255, 255, 102, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 2.5){
                polygon.setAttribute('fill', 'rgba(255, 102, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 1){
                polygon.setAttribute('fill', 'rgba(255, 153, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else if (finalDict[i].key === area.getAttribute('title') && finalDict[i].value > 0){
                polygon.setAttribute('fill', 'rgba(255, 0, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
                break;
              }
              else {
                polygon.setAttribute('fill', 'rgba(204, 0, 0, 1)');
                polygon.setAttribute('stroke', 'rgba(0, 0, 0, 1)');
              }
              
            }

            polygon.addEventListener('mouseover', showInfo);
            polygon.addEventListener('mouseout', hideInfo);
            svg.appendChild(polygon);
          }
        });
        
        // Add click event listener to SVG polygons
        svg.addEventListener('click', function(event) {
          if (event.target.tagName === 'polygon') {
            var href = event.target.getAttribute('data-href');
            if (href) {
              window.location.href = href;
            }
          }
        });
      });
    });
    // Show and Hide Functions
    function showInfo(event){
      let county = event.target.attributes.title.nodeValue;
          
      document.getElementById("display").innerHTML = county + " ";

      for (let i = 0; i < finalDict.length; i++){
        if (finalDict[i].key == county){
          document.getElementById("display").innerHTML += finalDict[i].value
        }
      }

      document.querySelector('.hide').style.display = 'block';

    }
    function hideInfo(){
      document.querySelector('.hide').style.display = 'none';
    }